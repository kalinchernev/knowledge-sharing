import React, { Component, Fragment } from 'react';
import { API, graphqlOperation } from 'aws-amplify';
import validUrl from 'valid-url';

// Take autogenerated mutation.
import { createPost } from '../graphql/mutations';

class Share extends Component {
  state = {
    disabled: true,
    notes: '',
    tags: [],
    url: '',
  };

  handleChange = e => {
    const target = e.target;
    const name = target.name;
    const value = target.type === 'checkbox' ? target.checked : target.value;

    // The most naive validation!
    if (validUrl.isUri(this.state.url)) {
      this.setState({ disabled: false });
    } else {
      this.setState({ disabled: true });
    }

    this.setState({
      [name]: value,
    });
  };

  handleSubmit = e => {
    e.preventDefault();

    const { url, notes, tags } = this.state;
    const date = new Date().toISOString();
    const tagsList = tags
      .split(',')
      .map(tag => tag.trim())
      .map(tag => tag.toLowerCase())
      .filter(tag => tag);

    const newPost = { url, notes, date, tags: tagsList };

    API.graphql(graphqlOperation(createPost, { input: newPost }))
      .then(result => {
        console.log(
          'New post has been created successfully!',
          JSON.stringify(result, null, 2)
        );
      })
      .catch(e => {
        console.error('An error occured while trying to create a new post', e);
      });
  };

  render() {
    const { disabled } = this.state;

    return (
      <Fragment>
        <p>Sharing is caring!</p>
        <form onSubmit={this.handleSubmit}>
          <label htmlFor="url">
            URL
            <input
              onChange={this.handleChange}
              name="url"
              type="text"
              id="url"
            />
          </label>
          <br />
          <label htmlFor="tags">
            Tags, comma separated
            <input
              onChange={this.handleChange}
              name="tags"
              type="text"
              id="tags"
            />
          </label>
          <br />
          <label htmlFor="notes">
            Notes
            <textarea onChange={this.handleChange} name="notes" id="notes" />
          </label>
          <br />
          <input disabled={disabled ? true : false} type="submit" value="Go!" />
        </form>
      </Fragment>
    );
  }
}

export default Share;
